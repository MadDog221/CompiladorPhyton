{'¬exp_leia@)': '¬exp_leia@ := Ɛ', '¬exp_rel_deriva@||': '¬exp_rel_deriva@ := ¬op_bolleano@ ¬exp_simples@ ¬op_relacional@ ¬exp_simples@ ¬exp_rel_deriva@', '¬fator_deriva@*': '¬fator_deriva@ := ¬op_md@ ¬fator@ ¬fator_deriva@', '¬op_bolleano@&&': '¬op_bolleano@ := &&', '¬senao_decl@escreva': '¬senao_decl@ := Ɛ', '¬tipo_return@vazio': '¬tipo_return@ := vazio', '¬identificador_imp_arm_deriva@,': '¬identificador_imp_arm_deriva@ := Ɛ', '¬start@constantes': '¬start@ := ¬registro_declaracao@ ¬constantes_declaracao@ ¬variaveis_declaracao@ ¬funcao_declaracao@ ¬algoritmo_declaracao@', '¬op_rel_deriva@token_identificador': '¬op_rel_deriva@ := Ɛ', '¬deriva_param@)': '¬deriva_param@ := Ɛ', '¬deriva_cont_funcao@se': '¬deriva_cont_funcao@ := ¬decl_comandos@ retorno ¬return_deriva@ ;', '¬declaracao_const@char': '¬declaracao_const@ := ¬declaracao@ = ¬valor_primitivo@ ; ¬declaracao_const@', '¬senao_decl@para': '¬senao_decl@ := Ɛ', '¬matriz@(': '¬matriz@ := Ɛ', '¬identificador_imp_arm_deriva@[': '¬identificador_imp_arm_deriva@ := [ token_inteiro ] ¬matriz@', '¬decl_param@booleano': '¬decl_param@ := ¬declaracao@ ¬identificador_param_deriva@ ¬deriva_param@', '¬identificador_imp_arm_deriva@.': '¬identificador_imp_arm_deriva@ := . token_identificador', '¬op_ss@-': '¬op_ss@ := -', '¬identificador_deriva@=': '¬identificador_deriva@ := ¬inicializacao@', '¬op_relacional@==': '¬op_relacional@ := ==', '¬matriz@se': '¬matriz@ := Ɛ', '¬matriz@>': '¬matriz@ := Ɛ', '¬op_soma_deriva@token_identificador': '¬op_soma_deriva@ := ¬termo@ ¬termo_deriva@', '¬op_bolleano@||': '¬op_bolleano@ := ||', '¬exp_escreva@token_identificador': '¬exp_escreva@ := ¬exp_imprime@ ¬exp_escreva_deriva@ ¬exp_escreva@', '¬declaracao_var@booleano': '¬declaracao_var@ := ¬declaracao@ ¬identificador_deriva@ ; ¬declaracao_var@', '¬exp_rel_bol@+': '¬exp_rel_bol@ := ¬exp_simples@ ¬op_relacional@ ¬exp_simples@ ¬exp_rel_deriva@', '¬decl_comandos@}': '¬decl_comandos@ := Ɛ', '¬op_sub_deriva@-': '¬op_sub_deriva@ := -', '¬return_deriva@falso': '¬return_deriva@ := ¬valor_primitivo@', '¬tipo_primitivo@inteiro': '¬tipo_primitivo@ := inteiro', '¬op_relacional@!=': '¬op_relacional@ := !=', '¬valor_primitivo@token_char': '¬valor_primitivo@ := token_char', '¬deriva_cont_principal@para': '¬deriva_cont_principal@ := ¬decl_comandos@', '¬exp_imprime@(': '¬exp_imprime@ := ( ¬exp_simples@ )', '¬tipo_return@cadeia': '¬tipo_return@ := ¬tipo_primitivo@', '¬se_declaracao@se': '¬se_declaracao@ := se ( ¬exp_rel_bol@ ) { ¬decl_comandos@ } ¬senao_decl@', '¬declaracao@cadeia': '¬declaracao@ := ¬tipo_primitivo@ token_identificador', '¬return_deriva@token_cadeia': '¬return_deriva@ := ¬valor_primitivo@', '¬exp_escreva@token_char': '¬exp_escreva@ := ¬exp_imprime@ ¬exp_escreva_deriva@ ¬exp_escreva@', '¬termo_deriva@para': '¬termo_deriva@ := Ɛ', '¬senao_decl@enquanto': '¬senao_decl@ := Ɛ', '¬fator@token_inteiro': '¬fator@ := token_inteiro', '¬deriva_cont_funcao@token_identificador': '¬deriva_cont_funcao@ := ¬decl_comandos@ retorno ¬return_deriva@ ;', '¬declaracao_var@enquanto': '¬declaracao_var@ := Ɛ', '¬deriva_cont_principal@char': '¬deriva_cont_principal@ := ¬declaracao_var@ ¬decl_comandos@', '¬para_declaracao@para': '¬para_declaracao@ := para ( token_identificador = token_inteiro ; token_identificador ¬op_relacional@ token_inteiro ; token_identificador ¬op_cont@ ; ) { ¬decl_comandos@ }', '¬fator@(': '¬fator@ := ( ¬exp_simples@ ', '¬registro_declaracao@registro': '¬registro_declaracao@ := registro token_identificador { ¬declaracao_reg@ } ¬registro_declaracao@', '¬declaracao_var@se': '¬declaracao_var@ := Ɛ', '¬identificador_param_deriva@[': '¬identificador_param_deriva@ := [ ] ¬matriz_param@', '¬op_rel_deriva@+': '¬op_rel_deriva@ := Ɛ', '¬matriz@para': '¬matriz@ := Ɛ', '¬declaracao@inteiro': '¬declaracao@ := ¬tipo_primitivo@ token_identificador', '¬exp_rel_deriva@&&': '¬exp_rel_deriva@ := ¬op_bolleano@ ¬exp_simples@ ¬op_relacional@ ¬exp_simples@ ¬exp_rel_deriva@', '¬deriva_cont_principal@}': '¬deriva_cont_principal@ := Ɛ', '¬op_sub_deriva@token_identificador': '¬op_sub_deriva@ := ¬termo@ ¬termo_deriva@', '¬exp_simples@token_inteiro': '¬exp_simples@ := ¬termo@ ¬termo_deriva@', '¬declaracao_var@inteiro': '¬declaracao_var@ := ¬declaracao@ ¬identificador_deriva@ ; ¬declaracao_var@', '¬exp_escreva@)': '¬exp_escreva@ := Ɛ', '¬decl_param@real': '¬decl_param@ := ¬declaracao@ ¬identificador_param_deriva@ ¬deriva_param@', '¬termo_deriva@!=': '¬termo_deriva@ := Ɛ', '¬comandos@enquanto': '¬comandos@ := Ɛ', '¬matriz@leia': '¬matriz@ := Ɛ', '¬leia_declaracao@leia': '¬leia_declaracao@ := leia ( ¬exp_leia@ ) ;', '¬declaracao_var@': '¬declaracao_var@ := Ɛ', '¬identificador_imp_arm_deriva@token_cadeia': '¬identificador_imp_arm_deriva@ := Ɛ', '¬matriz@': '¬matriz@ := Ɛ', '¬deriva_cont_funcao@enquanto': '¬deriva_cont_funcao@ := ¬decl_comandos@ retorno ¬return_deriva@ ;', '¬termo_deriva@)': '¬termo_deriva@ := Ɛ', '¬deriva_cont_principal@token_identificador': '¬deriva_cont_principal@ := ¬decl_comandos@', '¬comandos@leia': '¬comandos@ := Ɛ', '¬declaracao_reg@real': '¬declaracao_reg@ := ¬declaracao@ ; ¬declaracao_reg@', '¬op_soma_deriva@+': '¬op_soma_deriva@ := +', '¬decl_param@char': '¬decl_param@ := ¬declaracao@ ¬identificador_param_deriva@ ¬deriva_param@', '¬escreva_declaracao@escreva': '¬escreva_declaracao@ := escreva ( ¬exp_escreva@ ) ;', '¬matriz_param@,': '¬matriz_param@ := Ɛ', '¬termo@(': '¬termo@ := ¬fator@ ¬fator_deriva@', '¬tipo_return@char': '¬tipo_return@ := ¬tipo_primitivo@', '¬exp_armazena@token_identificador': '¬exp_armazena@ := token_identificador ¬identificador_imp_arm_deriva@', '¬deriva_cont_principal@booleano': '¬deriva_cont_principal@ := ¬declaracao_var@ ¬decl_comandos@', '¬decl_comandos@escreva': '¬decl_comandos@ := ¬comandos@ ¬decl_comandos@', '¬declaracao_var@}': '¬declaracao_var@ := Ɛ', '¬tipo_primitivo@char': '¬tipo_primitivo@ := char', '¬exp_escreva@(': '¬exp_escreva@ := ¬exp_imprime@ ¬exp_escreva_deriva@ ¬exp_escreva@', '¬fator_deriva@-': '¬fator_deriva@ := Ɛ', '¬deriva_cont_principal@cadeia': '¬deriva_cont_principal@ := ¬declaracao_var@ ¬decl_comandos@', '¬declaracao_var@leia': '¬declaracao_var@ := Ɛ', '¬identificador_imp_arm_deriva@token_identificador': '¬identificador_imp_arm_deriva@ := Ɛ', '¬matriz@;': '¬matriz@ := Ɛ', '¬matriz@||': '¬matriz@ := Ɛ', '¬exp_escreva_deriva@(': '¬exp_escreva_deriva@ := Ɛ', '¬exp_simples@+': '¬exp_simples@ := ¬op_ss@ ¬termo@ ¬termo_deriva@', '¬termo_deriva@&&': '¬termo_deriva@ := Ɛ', '¬valor_primitivo@falso': '¬valor_primitivo@ := falso', '¬matriz@token_cadeia': '¬matriz@ := Ɛ', '¬decl_comandos@leia': '¬decl_comandos@ := ¬comandos@ ¬decl_comandos@', '¬op_rel_deriva@-': '¬op_rel_deriva@ := Ɛ', '¬termo_deriva@<': '¬termo_deriva@ := Ɛ', '¬op_cont@++': '¬op_cont@ := ++', '¬matriz_param@;': '¬matriz_param@ := Ɛ', '¬fator@token_identificador': '¬fator@ := token_identificador ¬identificador_imp_arm_deriva@', '¬exp_rel_bol@-': '¬exp_rel_bol@ := ¬exp_simples@ ¬op_relacional@ ¬exp_simples@ ¬exp_rel_deriva@', '¬matriz_param@[': '¬matriz_param@ := [ ]', '¬exp_escreva@token_cadeia': '¬exp_escreva@ := ¬exp_imprime@ ¬exp_escreva_deriva@ ¬exp_escreva@', '¬matriz@*': '¬matriz@ := Ɛ', '¬exp_imprime@token_cadeia': '¬exp_imprime@ := token_cadeia', '¬declaracao_reg@cadeia': '¬declaracao_reg@ := ¬declaracao@ ; ¬declaracao_reg@', '¬senao_decl@senão': '¬senao_decl@ := senão { ¬decl_comandos@ }', '¬op_soma_deriva@(': '¬op_soma_deriva@ := ¬termo@ ¬termo_deriva@', '¬matriz@,': '¬matriz@ := Ɛ', '¬exp_simples@-': '¬exp_simples@ := ¬op_ss@ ¬termo@ ¬termo_deriva@', '¬valor_primitivo@token_cadeia': '¬valor_primitivo@ := token_cadeia', '¬deriva_cont_principal@se': '¬deriva_cont_principal@ := ¬decl_comandos@', '¬deriva_cont_principal@enquanto': '¬deriva_cont_principal@ := ¬decl_comandos@', '¬op_rel_deriva@(': '¬op_rel_deriva@ := Ɛ', '¬return_deriva@verdadeiro': '¬return_deriva@ := ¬valor_primitivo@', '¬enquanto_declaracao@enquanto': '¬enquanto_declaracao@ := enquanto ( ¬exp_rel_bol@ ) { ¬decl_comandos@ }', '¬matriz@!=': '¬matriz@ := Ɛ', '¬decl_comandos@para': '¬decl_comandos@ := ¬comandos@ ¬decl_comandos@', '¬declaracao_reg@}': '¬declaracao_reg@ := Ɛ', '¬decl_comandos@enquanto': '¬decl_comandos@ := ¬comandos@ ¬decl_comandos@', '¬tipo_primitivo@cadeia': '¬tipo_primitivo@ := cadeia', '¬senao_decl@token_identificador': '¬senao_decl@ := Ɛ', '¬declaracao@booleano': '¬declaracao@ := ¬tipo_primitivo@ token_identificador', '¬return_deriva@vazio': '¬return_deriva@ := vazio', '¬exp_leia_deriva@token_identificador': '¬exp_leia_deriva@ := Ɛ', '¬valor_primitivo@token_real': '¬valor_primitivo@ := token_real', '¬exp_leia@token_identificador': '¬exp_leia@ := ¬exp_armazena@ ¬exp_leia_deriva@ ¬exp_leia@', '¬declaracao_reg@inteiro': '¬declaracao_reg@ := ¬declaracao@ ; ¬declaracao_reg@', '¬decl_comandos@token_identificador': '¬decl_comandos@ := ¬comandos@ ¬decl_comandos@', '¬comandos@token_identificador': '¬comandos@ := Ɛ', '¬algoritmo_declaracao@algoritmo': '¬algoritmo_declaracao@ := algoritmo { ¬deriva_cont_principal@ }', '¬registro_declaracao@constantes': '¬registro_declaracao@ := Ɛ', '¬exp_rel_bol@(': '¬exp_rel_bol@ := ¬exp_simples@ ¬op_relacional@ ¬exp_simples@ ¬exp_rel_deriva@', '¬declaracao_var@para': '¬declaracao_var@ := Ɛ', '¬matriz@enquanto': '¬matriz@ := Ɛ', '¬return_deriva@token_real': '¬return_deriva@ := ¬valor_primitivo@', '¬termo_deriva@': '¬termo_deriva@ := Ɛ', '¬senao_decl@leia': '¬senao_decl@ := Ɛ', '¬termo_deriva@se': '¬termo_deriva@ := Ɛ', '¬termo_deriva@>': '¬termo_deriva@ := Ɛ', '¬exp_simples@token_identificador': '¬exp_simples@ := ¬termo@ ¬termo_deriva@', '¬op_ss@+': '¬op_ss@ := +', '¬declaracao_const@inteiro': '¬declaracao_const@ := ¬declaracao@ = ¬valor_primitivo@ ; ¬declaracao_const@', '¬start@registro': '¬start@ := ¬registro_declaracao@ ¬constantes_declaracao@ ¬variaveis_declaracao@ ¬funcao_declaracao@ ¬algoritmo_declaracao@', '¬matriz@escreva': '¬matriz@ := Ɛ', '¬tipo_primitivo@real': '¬tipo_primitivo@ := real', '¬matriz@&&': '¬matriz@ := Ɛ', '¬op_soma_deriva@token_inteiro': '¬op_soma_deriva@ := ¬termo@ ¬termo_deriva@', '¬deriva_cont_principal@inteiro': '¬deriva_cont_principal@ := ¬declaracao_var@ ¬decl_comandos@', '¬comandos@para': '¬comandos@ := Ɛ', '¬fator_deriva@/': '¬fator_deriva@ := ¬op_md@ ¬fator@ ¬fator_deriva@', '¬exp_escreva_deriva@token_cadeia': '¬exp_escreva_deriva@ := Ɛ', '¬exp_leia_deriva@,': '¬exp_leia_deriva@ := , ¬exp_armazena@', '¬termo_deriva@-': '¬termo_deriva@ := - ¬op_sub_deriva@', '¬funcao_declaracao@funcao': '¬funcao_declaracao@ := funcao ¬tipo_return@ token_identificador ( ¬decl_param@ ) { ¬deriva_cont_funcao@ } ¬funcao_declaracao@', '¬matriz@==': '¬matriz@ := Ɛ', '¬op_md@/': '¬op_md@ := /', '¬comandos@se': '¬comandos@ := Ɛ', '¬matriz@<': '¬matriz@ := Ɛ', '¬inicializacao@=': '¬inicializacao@ := = ¬valor_primitivo@', '¬op_rel_deriva@token_inteiro': '¬op_rel_deriva@ := Ɛ', '¬tipo_return@booleano': '¬tipo_return@ := ¬tipo_primitivo@', '¬op_rel_deriva@=': '¬op_rel_deriva@ := =', '¬return_deriva@token_char': '¬return_deriva@ := ¬valor_primitivo@', '¬identificador_imp_arm_deriva@*': '¬identificador_imp_arm_deriva@ := Ɛ', '¬deriva_cont_principal@real': '¬deriva_cont_principal@ := ¬declaracao_var@ ¬decl_comandos@', '¬inicializacao@;': '¬inicializacao@ := Ɛ', '¬exp_escreva_deriva@,': '¬exp_escreva_deriva@ := , ¬exp_imprime@', '¬declaracao@char': '¬declaracao@ := ¬tipo_primitivo@ token_identificador', '¬exp_rel_deriva@)': '¬exp_rel_deriva@ := Ɛ', '¬termo_deriva@enquanto': '¬termo_deriva@ := Ɛ', '¬termo_deriva@||': '¬termo_deriva@ := Ɛ', '¬deriva_cont_funcao@para': '¬deriva_cont_funcao@ := ¬decl_comandos@ retorno ¬return_deriva@ ;', '¬op_cont@--': '¬op_cont@ := --', '¬matriz@token_identificador': '¬matriz@ := Ɛ', '¬declaracao@real': '¬declaracao@ := ¬tipo_primitivo@ token_identificador', '¬termo_deriva@escreva': '¬termo_deriva@ := Ɛ', '¬declaracao_reg@char': '¬declaracao_reg@ := ¬declaracao@ ; ¬declaracao_reg@', '¬tipo_return@real': '¬tipo_return@ := ¬tipo_primitivo@', '¬declaracao_const@booleano': '¬declaracao_const@ := ¬declaracao@ = ¬valor_primitivo@ ; ¬declaracao_const@', '¬op_md@*': '¬op_md@ := *', '¬termo_deriva@leia': '¬termo_deriva@ := Ɛ', '¬termo_deriva@+': '¬termo_deriva@ := + ¬op_soma_deriva@', '¬decl_comandos@se': '¬decl_comandos@ := ¬comandos@ ¬decl_comandos@', '¬termo@token_inteiro': '¬termo@ := ¬fator@ ¬fator_deriva@', '¬decl_param@registro': '¬decl_param@ := registro token_identificador ¬deriva_param@', '¬exp_imprime@token_identificador': '¬exp_imprime@ := token_identificador ¬identificador_imp_arm_deriva@', '¬decl_param@cadeia': '¬decl_param@ := ¬declaracao@ ¬identificador_param_deriva@ ¬deriva_param@', '¬termo_deriva@==': '¬termo_deriva@ := Ɛ', '¬declaracao_var@escreva': '¬declaracao_var@ := Ɛ', '¬identificador_deriva@;': '¬identificador_deriva@ := Ɛ', '¬identificador_imp_arm_deriva@/': '¬identificador_imp_arm_deriva@ := Ɛ', '¬return_deriva@token_inteiro': '¬return_deriva@ := ¬valor_primitivo@', '¬matriz@[': '¬matriz@ := [ token_inteiro ]', '¬decl_comandos@retorno': '¬decl_comandos@ := Ɛ', '¬op_sub_deriva@token_inteiro': '¬op_sub_deriva@ := ¬termo@ ¬termo_deriva@', '¬declaracao_var@char': '¬declaracao_var@ := ¬declaracao@ ¬identificador_deriva@ ; ¬declaracao_var@', '¬identificador_imp_arm_deriva@(': '¬identificador_imp_arm_deriva@ := Ɛ', '¬exp_escreva_deriva@token_char': '¬exp_escreva_deriva@ := Ɛ', '¬decl_param@inteiro': '¬decl_param@ := ¬declaracao@ ¬identificador_param_deriva@ ¬deriva_param@', '¬op_sub_deriva@(': '¬op_sub_deriva@ := ¬termo@ ¬termo_deriva@', '¬constantes_declaracao@constantes': '¬constantes_declaracao@ := constantes { ¬declaracao_const@ }', '¬funcao_declaracao@algoritmo': '¬funcao_declaracao@ := Ɛ', '¬deriva_cont_funcao@escreva': '¬deriva_cont_funcao@ := ¬decl_comandos@ retorno ¬return_deriva@ ;', '¬matriz@)': '¬matriz@ := Ɛ', '¬exp_simples@(': '¬exp_simples@ := ¬termo@ ¬termo_deriva@', '¬tipo_return@registro': '¬tipo_return@ := registro', '¬op_relacional@>': '¬op_relacional@ := > ¬op_rel_deriva@', '¬deriva_cont_principal@leia': '¬deriva_cont_principal@ := ¬decl_comandos@', '¬exp_aritmetica@token_identificador': '¬exp_aritmetica@ := token_identificador = ¬exp_simples@', '¬variaveis_declaracao@variaveis': '¬variaveis_declaracao@ := variaveis { ¬declaracao_var@ }', '¬identificador_param_deriva@,': '¬identificador_param_deriva@ := Ɛ', '¬exp_escreva_deriva@token_identificador': '¬exp_escreva_deriva@ := Ɛ', '¬declaracao_reg@booleano': '¬declaracao_reg@ := ¬declaracao@ ; ¬declaracao_reg@', '¬return_deriva@token_identificador': '¬return_deriva@ := token_identificador ¬identificador_param_deriva@', '¬comandos@escreva': '¬comandos@ := Ɛ', '¬senao_decl@se': '¬senao_decl@ := Ɛ', '¬exp_rel_bol@token_identificador': '¬exp_rel_bol@ := ¬exp_simples@ ¬op_relacional@ ¬exp_simples@ ¬exp_rel_deriva@', '¬declaracao_const@real': '¬declaracao_const@ := ¬declaracao@ = ¬valor_primitivo@ ; ¬declaracao_const@', '¬valor_primitivo@token_inteiro': '¬valor_primitivo@ := token_inteiro', '¬tipo_primitivo@booleano': '¬tipo_primitivo@ := booleano', '¬matriz@-': '¬matriz@ := Ɛ', '¬deriva_cont_principal@escreva': '¬deriva_cont_principal@ := ¬decl_comandos@', '¬exp_imprime@token_char': '¬exp_imprime@ := token_char', '¬termo@token_identificador': '¬termo@ := ¬fator@ ¬fator_deriva@', '¬identificador_imp_arm_deriva@token_char': '¬identificador_imp_arm_deriva@ := Ɛ', '¬valor_primitivo@verdadeiro': '¬valor_primitivo@ := verdadeiro', '¬declaracao_var@real': '¬declaracao_var@ := ¬declaracao@ ¬identificador_deriva@ ; ¬declaracao_var@', '¬matriz@/': '¬matriz@ := Ɛ', '¬declaracao_const@cadeia': '¬declaracao_const@ := ¬declaracao@ = ¬valor_primitivo@ ; ¬declaracao_const@', '¬tipo_return@inteiro': '¬tipo_return@ := ¬tipo_primitivo@', '¬op_relacional@<': '¬op_relacional@ := < ¬op_rel_deriva@', '¬exp_rel_bol@token_inteiro': '¬exp_rel_bol@ := ¬exp_simples@ ¬op_relacional@ ¬exp_simples@ ¬exp_rel_deriva@', '¬deriva_param@,': '¬deriva_param@ := , ¬decl_param@', '¬matriz@token_char': '¬matriz@ := Ɛ', '¬declaracao_const@}': '¬declaracao_const@ := Ɛ', '¬declaracao_var@token_identificador': '¬declaracao_var@ := Ɛ', '¬declaracao_var@cadeia': '¬declaracao_var@ := ¬declaracao@ ¬identificador_deriva@ ; ¬declaracao_var@', '¬deriva_cont_funcao@variaveis': '¬deriva_cont_funcao@ := ¬variaveis_declaracao@ ¬decl_comandos@ retorno ¬return_deriva@ ;', '¬identificador_param_deriva@;': '¬identificador_param_deriva@ := Ɛ', '¬identificador_deriva@[': '¬identificador_deriva@ := [ token_inteiro ] ¬matriz@', '¬matriz@+': '¬matriz@ := Ɛ', '¬fator_deriva@+': '¬fator_deriva@ := Ɛ', '¬deriva_cont_funcao@leia': '¬deriva_cont_funcao@ := ¬decl_comandos@ retorno ¬return_deriva@ ;', '¬termo_deriva@token_identificador': '¬termo_deriva@ := Ɛ'}