// EXEMPLO DE COMENTARIO DE LINHA
// ==============================

/*
*
* EXEMPLO DE COMENTARIO DE BLOCO
*
*/

// ==============================
// IDENTIFICADORES
// CERTO
fabiana_bertoni // OK
Andressa // OK
Lucas_ // OK
Lucas_2015 // OK
a // OK
// COM ERRO
_ana123 // Ele pega o caractere e identifica como invalido depois ele identifica o identificador normalmente
123_ana // Ele identifica o numero normalmente - diz que o '_' eh errado - identifica o identificador normalmente
ana$dell // OK
ana¬invalido // Quando o caractere eh invalido ele tira o mesmo e deixa passar o identificador como se nada tivesse ocorrido
// ==============================================================
// NUMEROS
// CERTO
1 // OK
12345 // OK
123.2121 // OK
1.0 // OK
// COM ERRO
.80 // Identifica inicialmente o '.' como operador e por ultimo identifica o 80 como numero normalmente

//  ESTA APARECENDO UM ERRO DE CARACTERE INVALIDO NA LINHA 29 - DEUS SABE O QUE ESTA ACONTECE AQUI

8. // OK
// ==============================================================
// CARACTERE CONSTANTE
// CERTO
'9'
'h'
' '
'^'
// COM ERRO
' //(Nao indica erro de caractere)
'n // OK
n' // OK
'¬' // Esta caindo no ultimo if, mas era para cair no if de caractere constante
'l" //OK
'' // OK
'uuu' // OK - Verificar se ele percorre todo o erro o erro ateh achar um separador
'nnn // Tem que identificar o erro e ir ateh o final para achar algum separador
nnn' //OK
''' // Nao identifique a aspas simples como token (ele esta pegando os espacos e dizendo que eh caractere invalido)
// ==============================================================
// OPERADORES
// Certo
. //OK
+ //OK
- //OK
* //OK
/ //OK
++ //OK
-- //OK
!= //(Diz que o ! eh invalido e identifica o = como operador)
< //OK
<= //OK
> //OK
>= //OK
== //OK
&& // (Diz que o & eh invalido e identifica o = como operador)
|| // (Diz que o | eh invalido e identifica o = como operador)
= //OK
// Errado (Falta a implementacao)
+++ // Eh para dizer que tem caractere demais, algo assim
--- // Erro de mais um operador junto
.+ // Mesmo erro anterior
>== //Mesmo erro anterior
&
|
!


// 					===========================
// 					TESTES PASSANDO TOTALMENTE
// 					===========================
// DELIMITADORES
// ===========================
// CERTO
// ======
; //OK
, //OK
( //OK
) //OK
{ //OK
} //OK
[ //OK
] //OK
// ========
// COM ERRO
// ========
// OBS: encontrar possiveis erros para delimitadores mal-formados ou coisa do tipo

// ===========================
// CADEIA CONSTANTE
// ===========================
// ======
// CERTO
// ======
"qualquercoisa" 				// OK
"qualquer coisa * 8 7 & %"      // OK
""                              // OK
// ========
// COM ERRO
// ========
"askasjkajakjskas               // OK
kkasljalkjskl" 					// OK
"jsksjk¬sjhskjhs" 				// OK
"oioi' 							// OK





